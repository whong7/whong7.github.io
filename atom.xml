<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A piece of pure land</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://whong7.github.io/"/>
  <updated>2016-10-23T01:55:12.000Z</updated>
  <id>http://whong7.github.io/</id>
  
  <author>
    <name>whong7</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>视频截图，录制，压缩方式</title>
    <link href="http://whong7.github.io/2015/07/20/%E8%A7%86%E9%A2%91%E6%88%AA%E5%9B%BE%EF%BC%8C%E5%BD%95%E5%88%B6%EF%BC%8C%E5%8E%8B%E7%BC%A9/"/>
    <id>http://whong7.github.io/2015/07/20/视频截图，录制，压缩/</id>
    <published>2015-07-20T07:35:09.000Z</published>
    <updated>2016-10-23T01:55:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="视频截图"><a href="#视频截图" class="headerlink" title="视频截图:"></a>视频截图:</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;AVFoundation/AVFoundation.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> 1. 导入AVFountaion框架</div><div class="line"> 2. 创建图像资源生成器</div><div class="line"> 3. 调用方法, 来获取指定时间的截图</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UIImageView</span> *imageView;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">    [<span class="keyword">super</span> viewDidLoad];</div><div class="line">    <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event</div><div class="line">&#123;</div><div class="line">    <span class="comment">//1. 获取URL</span></div><div class="line">    <span class="built_in">NSURL</span> *url = [[<span class="built_in">NSBundle</span> mainBundle] URLForResource:<span class="string">@"Cupid_高清.mp4"</span> withExtension:<span class="literal">nil</span>];</div><div class="line"></div><div class="line">    <span class="comment">//2. 创建资源 --&gt; 找视频</span></div><div class="line">    <span class="built_in">AVAsset</span> *asset = [<span class="built_in">AVAsset</span> assetWithURL:url];</div><div class="line"></div><div class="line">    <span class="comment">//3. 创建图像资源生成器</span></div><div class="line">    <span class="built_in">AVAssetImageGenerator</span> *generator = [<span class="built_in">AVAssetImageGenerator</span> assetImageGeneratorWithAsset:asset];</div><div class="line"></div><div class="line">    <span class="comment">//4. 创建CMTime: 专们用于表示影片时间的值</span></div><div class="line">    <span class="comment">//帧数: 1S 24帧.  15~30  3gp:10~15</span></div><div class="line">    <span class="comment">//影片截图: 用第几秒+第几帧, 这样来获取比较合适</span></div><div class="line"></div><div class="line">    <span class="comment">//value: 你要获取第几帧</span></div><div class="line">    <span class="comment">//timescale: 一秒有几帧</span></div><div class="line">    <span class="comment">//time的结果 = value / timescale 单位是秒+帧</span></div><div class="line"></div><div class="line">    <span class="built_in">CMTime</span> time = <span class="built_in">CMTimeMake</span>(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line">    <span class="built_in">NSValue</span> *value = [<span class="built_in">NSValue</span> valueWithCMTime:time];</div><div class="line"></div><div class="line">    <span class="comment">//5. 指定时间, 异步生成图像</span></div><div class="line">    [generator generateCGImagesAsynchronouslyForTimes:@[value] completionHandler:^(<span class="built_in">CMTime</span> requestedTime, <span class="built_in">CGImageRef</span>  _Nullable image, <span class="built_in">CMTime</span> actualTime, <span class="built_in">AVAssetImageGeneratorResult</span> result, <span class="built_in">NSError</span> * _Nullable error) &#123;</div><div class="line"></div><div class="line">        <span class="comment">//这里不能使用桥接</span></div><div class="line">        <span class="comment">//self.imageView.image = (__bridge UIImage * _Nullable)(image);</span></div><div class="line"></div><div class="line">        <span class="comment">//6. 在主线程中更新UI</span></div><div class="line">        <span class="built_in">dispatch_sync</span>(dispatch_get_main_queue(), ^&#123;</div><div class="line">            <span class="keyword">self</span>.imageView.image = [<span class="built_in">UIImage</span> imageWithCGImage:image];</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="视频录制"><a href="#视频录制" class="headerlink" title="视频录制"></a>视频录制</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;MobileCoreServices/MobileCoreServices.h&gt;</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;MediaPlayer/MediaPlayer.h&gt;</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;AssetsLibrary/AssetsLibrary.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()&lt;<span class="title">UINavigationControllerDelegate</span>, <span class="title">UIImagePickerControllerDelegate</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>)  <span class="built_in">MPMoviePlayerController</span> *mpC;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">    [<span class="keyword">super</span> viewDidLoad];</div><div class="line">    <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> 点击屏幕录制视频</div><div class="line"> 播放刚才录制的视频</div><div class="line"> 保存视频</div><div class="line"></div><div class="line"> iOS10注意添加授权Key</div><div class="line"> */</div><div class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event</div><div class="line">&#123;</div><div class="line">    <span class="comment">//1. 先判断源类型是否可用</span></div><div class="line">    <span class="keyword">if</span> (![<span class="built_in">UIImagePickerController</span> isSourceTypeAvailable:<span class="built_in">UIImagePickerControllerSourceTypePhotoLibrary</span>]) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="comment">//2. 创建</span></div><div class="line">    <span class="built_in">UIImagePickerController</span> *pickerC = [<span class="built_in">UIImagePickerController</span> new];</div><div class="line"></div><div class="line">    <span class="comment">//3. 设置源类型 (默认就是UIImagePickerControllerSourceTypePhotoLibrary)</span></div><div class="line">    <span class="comment">//PhotoLibrary: 选择视频</span></div><div class="line">    <span class="comment">//Camera: 录制视频</span></div><div class="line">    pickerC.sourceType = <span class="built_in">UIImagePickerControllerSourceTypeCamera</span>;</div><div class="line"></div><div class="line">    <span class="comment">//4. 设置媒体类型 默认是Image, kUTTypeImage = @"public.movie"</span></div><div class="line">    pickerC.mediaTypes = @[(<span class="built_in">NSString</span> *)kUTTypeMovie];</div><div class="line"></div><div class="line">    <span class="comment">//5. 设置代理</span></div><div class="line">    pickerC.delegate = <span class="keyword">self</span>;</div><div class="line"></div><div class="line">    <span class="comment">//6. 模态弹出控制器</span></div><div class="line">    [<span class="keyword">self</span> presentViewController:pickerC animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark picker的代理方法</span></div><div class="line">- (<span class="keyword">void</span>)imagePickerController:(<span class="built_in">UIImagePickerController</span> *)picker didFinishPickingMediaWithInfo:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *,<span class="keyword">id</span>&gt; *)info</div><div class="line">&#123;</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"info: %@"</span>, info);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     UIImagePickerControllerMediaType = "public.movie";</div><div class="line">     UIImagePickerControllerMediaURL = "file:///private/var/mobile/Containers/Data/Application/0DF55A9B-89D5-4477-BE3A-6CBAB2912419/tmp/49794758578__D28D3F45-60D0-47AE-9789-04698E5808A6.MOV";</div><div class="line">     */</div><div class="line"></div><div class="line">    <span class="comment">//保存视频</span></div><div class="line">    <span class="comment">//此代理方法, 从相册选中一个照片/拍照/选中视频/录制视频都会走这个方法.</span></div><div class="line">    <span class="comment">//只有录制视频这种情况才需要保存视频</span></div><div class="line">    <span class="comment">//1. 保证媒体类型是视频 --&gt; Movie</span></div><div class="line">    <span class="built_in">NSString</span> *meidaTypeStr = info[<span class="built_in">UIImagePickerControllerMediaType</span>];</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ([meidaTypeStr isEqualToString:<span class="string">@"public.movie"</span>]) &#123;</div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.mpC == <span class="literal">nil</span>) &#123;</div><div class="line">            <span class="comment">//强引用, 设置Frame, 添加到View上, 调用播放方法</span></div><div class="line">            <span class="keyword">self</span>.mpC = [<span class="built_in">MPMoviePlayerController</span> new];</div><div class="line">            <span class="keyword">self</span>.mpC.view.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">375</span>, <span class="number">500</span>);</div><div class="line">            [<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.mpC.view];</div><div class="line">        &#125;;</div><div class="line"></div><div class="line">        <span class="comment">//网址不一样. 播放方法</span></div><div class="line">        <span class="comment">//UIImagePickerControllerMediaURL: 是视频地址, 也需要保证媒体类型是视频</span></div><div class="line">        <span class="keyword">self</span>.mpC.contentURL = info[<span class="built_in">UIImagePickerControllerMediaURL</span>];</div><div class="line">        [<span class="keyword">self</span>.mpC play];</div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment">//2. 保证是录制视频 (如果是选中了视频, 说明视频已经存在了. 如果你在保存, 就重复了)</span></div><div class="line">        <span class="comment">//说明现在是录制视频</span></div><div class="line">        <span class="keyword">if</span> (picker.sourceType == <span class="built_in">UIImagePickerControllerSourceTypeCamera</span>) &#123;</div><div class="line"></div><div class="line">            <span class="comment">//3. 保存</span></div><div class="line">            ALAssetsLibrary *al = [ALAssetsLibrary new];</div><div class="line"></div><div class="line">            <span class="comment">//保存视频到系统的默认相册中 --&gt; 只需要传入要保存的视频的URL地址即可</span></div><div class="line">            [al writeVideoAtPathToSavedPhotosAlbum:info[<span class="built_in">UIImagePickerControllerMediaURL</span>] completionBlock:<span class="literal">nil</span>];</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">//一旦实现了代理方法, 那么picker需要手动消失</span></div><div class="line">    [picker dismissViewControllerAnimated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<h3 id="视频压缩"><a href="#视频压缩" class="headerlink" title="视频压缩"></a>视频压缩</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;MobileCoreServices/MobileCoreServices.h&gt;</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;AVFoundation/AVFoundation.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()&lt;<span class="title">UINavigationControllerDelegate</span>, <span class="title">UIImagePickerControllerDelegate</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">    [<span class="keyword">super</span> viewDidLoad];</div><div class="line">    <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">IBAction</span>)chooseVideoClick:(<span class="keyword">id</span>)sender &#123;</div><div class="line">    <span class="comment">/*</span></div><div class="line">     enum &#123;</div><div class="line">     UIImagePickerControllerSourceTypePhotoLibrary ,//来自图库</div><div class="line">     UIImagePickerControllerSourceTypeCamera ,//来自相机</div><div class="line">     UIImagePickerControllerSourceTypeSavedPhotosAlbum //来自相册</div><div class="line">     &#125;;</div><div class="line">     */</div><div class="line">    <span class="keyword">if</span> (![<span class="built_in">UIImagePickerController</span> isSourceTypeAvailable:<span class="built_in">UIImagePickerControllerSourceTypePhotoLibrary</span>]) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">UIImagePickerController</span> *picker = [<span class="built_in">UIImagePickerController</span> new];</div><div class="line"></div><div class="line">    <span class="comment">//可以控制是选择(PhotoLibrary)/拍摄(Camera)</span></div><div class="line">    picker.sourceType = <span class="built_in">UIImagePickerControllerSourceTypePhotoLibrary</span>;</div><div class="line"></div><div class="line">    <span class="comment">//可以控制是照片(kUTTypeImage)/视频(kUTTypeMovie)</span></div><div class="line">    picker.mediaTypes = @[(<span class="built_in">NSString</span> *)kUTTypeMovie];</div><div class="line"></div><div class="line">    picker.delegate = <span class="keyword">self</span>;</div><div class="line"></div><div class="line">    [<span class="keyword">self</span> presentViewController:picker animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark 代理方法 --&gt; 获取视频的URL地址, 并进行压缩</span></div><div class="line">- (<span class="keyword">void</span>)imagePickerController:(<span class="built_in">UIImagePickerController</span> *)picker didFinishPickingMediaWithInfo:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *,<span class="keyword">id</span>&gt; *)info</div><div class="line">&#123;</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"info: %@"</span>,info);</div><div class="line">    <span class="comment">/**</span></div><div class="line">     UIImagePickerControllerMediaURL = "file:///private/var/mobile/Containers/Data/Application/F7867122-B08D-46E9-86DD-09EC7BEF7208/tmp/trim.EF7DA639-689D-4C56-A12B-8DE97CC226C2.MOV";</div><div class="line">     UIImagePickerControllerReferenceURL = "assets-library://asset/asset.MOV?id=E00E435A-84F3-45CC-8604-D4981B1C89EB&amp;ext=MOV";</div><div class="line">     */</div><div class="line"></div><div class="line">    <span class="comment">//转换视频</span></div><div class="line">    [<span class="keyword">self</span> <span class="keyword">export</span>:info[<span class="built_in">UIImagePickerControllerMediaURL</span>]];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark 视频压缩代码 转换视频</span></div><div class="line">- (<span class="keyword">void</span>)<span class="keyword">export</span>:(<span class="built_in">NSURL</span> *)url</div><div class="line">&#123;</div><div class="line">    <span class="comment">//1. 创建资源类</span></div><div class="line">    <span class="built_in">AVAsset</span> *asset = [<span class="built_in">AVAsset</span> assetWithURL:url];</div><div class="line"></div><div class="line">    <span class="comment">//2. 创建资源转换会话类</span></div><div class="line">    <span class="comment">//presetName: 设置分辨率和质量  可以选择低或中质量</span></div><div class="line">    <span class="built_in">AVAssetExportSession</span> *exportSession = [<span class="built_in">AVAssetExportSession</span> exportSessionWithAsset:asset presetName:<span class="built_in">AVAssetExportPresetLowQuality</span>];</div><div class="line"></div><div class="line">    <span class="comment">//3. 转换的路径 从沙盒中指定路径 --&gt; 变成NSURL</span></div><div class="line">    <span class="comment">//文件重名, 不会默认覆盖</span></div><div class="line">    <span class="comment">//temp://video/abc.mp4</span></div><div class="line">    exportSession.outputURL = [<span class="built_in">NSURL</span> fileURLWithPath: [<span class="built_in">NSTemporaryDirectory</span>() stringByAppendingPathComponent:<span class="string">@"2.mp4"</span>]];</div><div class="line"></div><div class="line">    <span class="comment">//4. 转换的格式</span></div><div class="line">    exportSession.outputFileType = <span class="built_in">AVFileTypeMPEG4</span>;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     "com.apple.quicktime-movie"  --&gt; AVFileTypeQuickTimeMovie</div><div class="line">     "public.mpeg-4"    --&gt; AVFileTypeMPEG4</div><div class="line">     */</div><div class="line">    <span class="comment">//NSLog(@"session: %@", exportSession.supportedFileTypes);</span></div><div class="line"></div><div class="line">    <span class="comment">//5. 转换方法 , 转成功, 会调用里面的block</span></div><div class="line">    [exportSession exportAsynchronouslyWithCompletionHandler:^&#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"转换成功"</span>);</div><div class="line">        <span class="comment">//在这里执行发送视频的代码</span></div><div class="line">    &#125;];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;视频截图&quot;&gt;&lt;a href=&quot;#视频截图&quot; class=&quot;headerlink&quot; title=&quot;视频截图:&quot;&gt;&lt;/a&gt;视频截图:&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;ViewController.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;AVFoundation/AVFoundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 1. 导入AVFountaion框架&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 2. 创建图像资源生成器&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 3. 调用方法, 来获取指定时间的截图&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt; ()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIImageView&lt;/span&gt; *imageView;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Do any additional setup after loading the view, typically from a nib.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1. 获取URL&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *url = [[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; mainBundle] URLForResource:&lt;span class=&quot;string&quot;&gt;@&quot;Cupid_高清.mp4&quot;&lt;/span&gt; withExtension:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//2. 创建资源 --&amp;gt; 找视频&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVAsset&lt;/span&gt; *asset = [&lt;span class=&quot;built_in&quot;&gt;AVAsset&lt;/span&gt; assetWithURL:url];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//3. 创建图像资源生成器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVAssetImageGenerator&lt;/span&gt; *generator = [&lt;span class=&quot;built_in&quot;&gt;AVAssetImageGenerator&lt;/span&gt; assetImageGeneratorWithAsset:asset];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//4. 创建CMTime: 专们用于表示影片时间的值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//帧数: 1S 24帧.  15~30  3gp:10~15&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//影片截图: 用第几秒+第几帧, 这样来获取比较合适&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//value: 你要获取第几帧&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//timescale: 一秒有几帧&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//time的结果 = value / timescale 单位是秒+帧&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CMTime&lt;/span&gt; time = &lt;span class=&quot;built_in&quot;&gt;CMTimeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSValue&lt;/span&gt; *value = [&lt;span class=&quot;built_in&quot;&gt;NSValue&lt;/span&gt; valueWithCMTime:time];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//5. 指定时间, 异步生成图像&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [generator generateCGImagesAsynchronouslyForTimes:@[value] completionHandler:^(&lt;span class=&quot;built_in&quot;&gt;CMTime&lt;/span&gt; requestedTime, &lt;span class=&quot;built_in&quot;&gt;CGImageRef&lt;/span&gt;  _Nullable image, &lt;span class=&quot;built_in&quot;&gt;CMTime&lt;/span&gt; actualTime, &lt;span class=&quot;built_in&quot;&gt;AVAssetImageGeneratorResult&lt;/span&gt; result, &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; * _Nullable error) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//这里不能使用桥接&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//self.imageView.image = (__bridge UIImage * _Nullable)(image);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//6. 在主线程中更新UI&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;dispatch_sync&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageView.image = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageWithCGImage:image];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="传感器" scheme="http://whong7.github.io/tags/%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>传感器：加速计,陀螺仪,磁力计 push获取方式 pull获取方式</title>
    <link href="http://whong7.github.io/2015/06/28/%E4%BC%A0%E6%84%9F%E5%99%A8%EF%BC%9A%E5%8A%A0%E9%80%9F%E8%AE%A1,%E9%99%80%E8%9E%BA%E4%BB%AA,%E7%A3%81%E5%8A%9B%E8%AE%A1%20push%E8%8E%B7%E5%8F%96%E6%96%B9%E5%BC%8F/"/>
    <id>http://whong7.github.io/2015/06/28/传感器：加速计,陀螺仪,磁力计 push获取方式/</id>
    <published>2015-06-28T02:13:04.000Z</published>
    <updated>2016-10-23T01:53:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传感器：加速计-陀螺仪-磁力计-push获取方式"><a href="#传感器：加速计-陀螺仪-磁力计-push获取方式" class="headerlink" title="传感器：加速计,陀螺仪,磁力计 push获取方式"></a>传感器：加速计,陀螺仪,磁力计 push获取方式</h2><ul>
<li>获取方式分为2种: push(系统会按照一定的时间间隔, 不停的返回数据) / pull (在需要的时候再来获取数据)</li>
</ul>
<h3 id="加速计"><a href="#加速计" class="headerlink" title="加速计:"></a>加速计:</h3><ul>
<li>检测力在某个方向上有作用 (检测到方向和大小) –&gt; 沿着轴上下快速运动</li>
<li>加速度计的原理很简单，现在手机里面基本配备的都是3维线传感器，也就是说，用来测量x，y，z三个轴上的加速力。加速力就是当物体在加速过程中作用在物体上的力，就好比地球引力，也就是重力。</li>
<li>可以用于监测设备的摇晃</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)accelerometerPush &#123;</div><div class="line">    <span class="comment">//加速器push (频繁获取数据)</span></div><div class="line">    <span class="comment">//Accelerometer</span></div><div class="line">    <span class="comment">//1. 创建运动管理器</span></div><div class="line">    <span class="keyword">self</span>.motionMgr = [<span class="built_in">CMMotionManager</span> new];</div><div class="line"></div><div class="line">    <span class="comment">//2. 判断能否使用加速计</span></div><div class="line">    <span class="keyword">if</span> (![<span class="keyword">self</span>.motionMgr isAccelerometerAvailable]) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//3. 设置采样间隔(更新间隔/推送间隔) --&gt; push方式才需要设置</span></div><div class="line">    <span class="comment">//单位是秒</span></div><div class="line">    <span class="keyword">self</span>.motionMgr.accelerometerUpdateInterval = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment">//4. 开始更新 --&gt; 如果是push方式, 那么使用带有bolck的方法</span></div><div class="line">    [<span class="keyword">self</span>.motionMgr startAccelerometerUpdatesToQueue:[<span class="built_in">NSOperationQueue</span> mainQueue] withHandler:^(<span class="built_in">CMAccelerometerData</span> * _Nullable accelerometerData, <span class="built_in">NSError</span> * _Nullable error) &#123;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         1. 哪个轴方向指向地面方向, 就会打印哪个轴方向的值.</div><div class="line">         2. 默认的大小 1~-1之间</div><div class="line">         3. 沿着轴方向运动, 会改变大小</div><div class="line"></div><div class="line">         如果要实现摇一摇, 可以判断三个轴的任何一个, 只要大于某个数值, 就可以判定发生了摇一摇</div><div class="line">         */</div><div class="line">        <span class="built_in">CMAcceleration</span> acceleration = accelerometerData.acceleration;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"x: %f, y: %f, z: %f "</span>, acceleration.x, acceleration.y, acceleration.z);</div><div class="line">    &#125;];</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="陀螺仪-检测转动的角速度-–-gt-只有转动才会有值"><a href="#陀螺仪-检测转动的角速度-–-gt-只有转动才会有值" class="headerlink" title="陀螺仪: 检测转动的角速度  –&gt; 只有转动才会有值"></a>陀螺仪: 检测转动的角速度  –&gt; 只有转动才会有值</h3><ul>
<li><p>陀螺仪原理是指陀螺仪工作的原理，螺旋仪是一种用来传感与维持方向的装置，基于角动量守恒的理论设计出来的。陀螺仪主要是由一个位于轴心且可旋转的转子构成。 陀螺仪一旦开始旋转，由于转子的角动量，陀螺仪有抗拒方向改变的趋向。</p>
</li>
<li><p>现象解释[百度百科]</p>
<ul>
<li>高速旋转的物体的旋转轴，对于改变其方向的外力作用有趋向于垂直方向的倾向。而且，旋转物体在横向倾斜时，重力会向增加倾斜的方向作用，而轴则向垂直方向运动，就产生了摇头的运动（岁差运动）。当陀螺经纬仪的陀螺旋转轴以水平轴旋转时，由于地球的旋转而受到铅直方向旋转力，陀螺的旋转体向水平面内的子午线方向产生岁差运动。当轴平行于子午线而静止时可加以应用。</li>
<li>陀螺仪基本上就是运用物体高速旋转时，角动量很大，旋转轴会一直稳定指向一个方向的性质，所制造出来的定向仪器。不过它必需转得够快，或者惯量够大(也可以说是角动量要够大)。不然，只要一个很小的力矩，就会严重影响到它的稳定性。</li>
</ul>
</li>
</ul>
<p> <img src="http://g.hiphotos.baidu.com/baike/s%3D220/sign=4f93e8cb75094b36df921cef93cc7c00/0823dd54564e9258af3790fa9f82d158ccbf4ea6.jpg" alt=""></p>
<ul>
<li>陀螺仪的测量是随时间累计的，要知道当前的角度，只需要将之前所有的输出数值积分即可。当然，陀螺仪只会输出当前旋转的变化值，比如说，如果一架飞机是以60度的倾斜角度径直飞行，此时陀螺仪的输出为0，因为当前就没有机体旋转。但是，你可以通过之前的输出累计计算出当前机体倾斜角度是多少。<br><img src="http://ww3.sinaimg.cn/large/9632d3f5jw1f91hzfgwxfj20a00bjaaq.jpg" alt=""></li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)gyroPush</div><div class="line">&#123;</div><div class="line">    <span class="comment">//陀螺仪push (频繁获取数据)</span></div><div class="line">    <span class="comment">//Gyro</span></div><div class="line">    <span class="comment">//1. 创建运动管理器</span></div><div class="line">    <span class="keyword">self</span>.motionMgr = [<span class="built_in">CMMotionManager</span> new];</div><div class="line"></div><div class="line">    <span class="comment">//2. 判断能否使用陀螺仪</span></div><div class="line">    <span class="keyword">if</span> (![<span class="keyword">self</span>.motionMgr isGyroAvailable]) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//3. 设置采样间隔(更新间隔/推送间隔) --&gt; push方式才需要设置</span></div><div class="line">    <span class="comment">//单位是秒</span></div><div class="line">    <span class="keyword">self</span>.motionMgr.gyroUpdateInterval = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment">//4. 开始更新 --&gt; 如果是push方式, 那么使用带有bolck的方法</span></div><div class="line">    [<span class="keyword">self</span>.motionMgr startGyroUpdatesToQueue:[<span class="built_in">NSOperationQueue</span> mainQueue] withHandler:^(<span class="built_in">CMGyroData</span> * _Nullable gyroData, <span class="built_in">NSError</span> * _Nullable error) &#123;</div><div class="line">        <span class="built_in">CMRotationRate</span> rotationRate = gyroData.rotationRate;</div><div class="line"></div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"x: %f, y: %f, z: %f "</span>, rotationRate.x, rotationRate.y, rotationRate.z);</div><div class="line">    &#125;];</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<h3 id="磁力计-检测磁场的变化-–-gt-主要用于导航"><a href="#磁力计-检测磁场的变化-–-gt-主要用于导航" class="headerlink" title="磁力计: 检测磁场的变化  –&gt; 主要用于导航"></a>磁力计: 检测磁场的变化  –&gt; 主要用于导航</h3><ul>
<li>感应周边磁场，盒盖锁屏</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)gyroPush</div><div class="line">&#123;</div><div class="line">-(<span class="keyword">void</span>)magnetometerPush&#123;</div><div class="line"></div><div class="line">    <span class="comment">//磁力计push (频繁获取数据)</span></div><div class="line">    <span class="comment">//Magnetometer</span></div><div class="line">    <span class="comment">//1. 创建运动管理器</span></div><div class="line">    <span class="keyword">self</span>.motionMgr = [<span class="built_in">CMMotionManager</span> new];</div><div class="line"></div><div class="line">    <span class="comment">//2. 判断能否使用磁力计</span></div><div class="line">    <span class="keyword">if</span> (![<span class="keyword">self</span>.motionMgr isMagnetometerAvailable]) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//3. 设置采样间隔(更新间隔/推送间隔) --&gt; push方式才需要设置</span></div><div class="line">    <span class="comment">//单位是秒</span></div><div class="line">    <span class="keyword">self</span>.motionMgr.magnetometerUpdateInterval = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment">//4. 开始更新 --&gt; 如果是push方式, 那么使用带有bolck的方法</span></div><div class="line">    [<span class="keyword">self</span>.motionMgr startMagnetometerUpdatesToQueue:[<span class="built_in">NSOperationQueue</span> mainQueue] withHandler:^(<span class="built_in">CMMagnetometerData</span> * _Nullable magnetometerData, <span class="built_in">NSError</span> * _Nullable error) &#123;</div><div class="line"></div><div class="line">        <span class="comment">//单位: 特斯拉</span></div><div class="line">        <span class="built_in">CMMagneticField</span> magneticField = magnetometerData.magneticField;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"x: %f, y: %f, z: %f "</span>, magneticField.x, magneticField.y, magneticField.z);</div><div class="line">    &#125;];</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传感器：加速计-陀螺仪-磁力计-push获取方式&quot;&gt;&lt;a href=&quot;#传感器：加速计-陀螺仪-磁力计-push获取方式&quot; class=&quot;headerlink&quot; title=&quot;传感器：加速计,陀螺仪,磁力计 push获取方式&quot;&gt;&lt;/a&gt;传感器：加速计,陀螺仪,磁力计 push获取方式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;获取方式分为2种: push(系统会按照一定的时间间隔, 不停的返回数据) / pull (在需要的时候再来获取数据)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;加速计&quot;&gt;&lt;a href=&quot;#加速计&quot; class=&quot;headerlink&quot; title=&quot;加速计:&quot;&gt;&lt;/a&gt;加速计:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;检测力在某个方向上有作用 (检测到方向和大小) –&amp;gt; 沿着轴上下快速运动&lt;/li&gt;
&lt;li&gt;加速度计的原理很简单，现在手机里面基本配备的都是3维线传感器，也就是说，用来测量x，y，z三个轴上的加速力。加速力就是当物体在加速过程中作用在物体上的力，就好比地球引力，也就是重力。&lt;/li&gt;
&lt;li&gt;可以用于监测设备的摇晃&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)accelerometerPush &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//加速器push (频繁获取数据)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Accelerometer&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1. 创建运动管理器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.motionMgr = [&lt;span class=&quot;built_in&quot;&gt;CMMotionManager&lt;/span&gt; new];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//2. 判断能否使用加速计&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.motionMgr isAccelerometerAvailable]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//3. 设置采样间隔(更新间隔/推送间隔) --&amp;gt; push方式才需要设置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//单位是秒&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.motionMgr.accelerometerUpdateInterval = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//4. 开始更新 --&amp;gt; 如果是push方式, 那么使用带有bolck的方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.motionMgr startAccelerometerUpdatesToQueue:[&lt;span class=&quot;built_in&quot;&gt;NSOperationQueue&lt;/span&gt; mainQueue] withHandler:^(&lt;span class=&quot;built_in&quot;&gt;CMAccelerometerData&lt;/span&gt; * _Nullable accelerometerData, &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; * _Nullable error) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         1. 哪个轴方向指向地面方向, 就会打印哪个轴方向的值.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         2. 默认的大小 1~-1之间&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         3. 沿着轴方向运动, 会改变大小&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         如果要实现摇一摇, 可以判断三个轴的任何一个, 只要大于某个数值, 就可以判定发生了摇一摇&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CMAcceleration&lt;/span&gt; acceleration = accelerometerData.acceleration;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x: %f, y: %f, z: %f &quot;&lt;/span&gt;, acceleration.x, acceleration.y, acceleration.z);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="传感器" scheme="http://whong7.github.io/tags/%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>传感器：加速计,陀螺仪,磁力计 pull获取方式</title>
    <link href="http://whong7.github.io/2015/06/27/%E4%BC%A0%E6%84%9F%E5%99%A8%EF%BC%9A%E5%8A%A0%E9%80%9F%E8%AE%A1,%E9%99%80%E8%9E%BA%E4%BB%AA,%E7%A3%81%E5%8A%9B%E8%AE%A1%20pull%E8%8E%B7%E5%8F%96%E6%96%B9%E5%BC%8F/"/>
    <id>http://whong7.github.io/2015/06/27/传感器：加速计,陀螺仪,磁力计 pull获取方式/</id>
    <published>2015-06-27T04:13:04.000Z</published>
    <updated>2016-10-23T01:53:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传感器：加速计-陀螺仪-磁力计-pull获取方式"><a href="#传感器：加速计-陀螺仪-磁力计-pull获取方式" class="headerlink" title="传感器：加速计,陀螺仪,磁力计 pull获取方式"></a>传感器：加速计,陀螺仪,磁力计 pull获取方式</h2><ul>
<li>获取方式分为2种: push(系统会按照一定的时间间隔, 不停的返回数据) / pull (在需要的时候再来获取数据)</li>
</ul>
<ul>
<li>陀螺仪,磁力计操作方法类似</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;CoreMotion/CoreMotion.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></div><div class="line"></div><div class="line"><span class="comment">//运动管理器</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">CMMotionManager</span> *motionMgr;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">    [<span class="keyword">super</span> viewDidLoad];</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     加速计: 检测力在某个方向上有作用 (检测到方向和大小) --&gt; 沿着轴上下快速运动</div><div class="line"></div><div class="line">    </div><div class="line">     */</div><div class="line"></div><div class="line">    <span class="comment">//加速器pull (在需要的时候再来获取数据)</span></div><div class="line">    <span class="comment">//Accelerometer</span></div><div class="line">    <span class="comment">//1. 创建运动管理器</span></div><div class="line">    <span class="keyword">self</span>.motionMgr = [<span class="built_in">CMMotionManager</span> new];</div><div class="line"></div><div class="line">    <span class="comment">//2. 判断能否使用加速计</span></div><div class="line">    <span class="keyword">if</span> (![<span class="keyword">self</span>.motionMgr isAccelerometerAvailable]) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//3. 开始更新</span></div><div class="line">    [<span class="keyword">self</span>.motionMgr startAccelerometerUpdates];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark 点击屏幕获取数组</span></div><div class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event</div><div class="line">&#123;</div><div class="line">    <span class="comment">//加速计 / 陀螺仪 / 磁力计, 在开始更新数据之后, 都会讲获取的数据, 保存到对应的属性中. 可以从属性中直接获取想要的数据</span></div><div class="line"></div><div class="line">    <span class="comment">//加速</span></div><div class="line">    <span class="built_in">CMAcceleration</span> acceleration = <span class="keyword">self</span>.motionMgr.accelerometerData.acceleration;</div><div class="line"></div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"x: %f, y: %f, z: %f "</span>, acceleration.x, acceleration.y, acceleration.z);</div><div class="line"></div><div class="line"><span class="comment">//    CMRotationRate rotationRate = self.motionMgr.gyroData.rotationRate;</span></div><div class="line"><span class="comment">//    NSLog(@"x: %f, y: %f, z: %f ", rotationRate.x, rotationRate.y, rotationRate.z);</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传感器：加速计-陀螺仪-磁力计-pull获取方式&quot;&gt;&lt;a href=&quot;#传感器：加速计-陀螺仪-磁力计-pull获取方式&quot; class=&quot;headerlink&quot; title=&quot;传感器：加速计,陀螺仪,磁力计 pull获取方式&quot;&gt;&lt;/a&gt;传感器：加速计,陀螺仪,磁力
    
    </summary>
    
    
      <category term="传感器" scheme="http://whong7.github.io/tags/%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>控制器创建方式</title>
    <link href="http://whong7.github.io/2014/12/27/1.%E6%8E%A7%E5%88%B6%E5%99%A8%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F/"/>
    <id>http://whong7.github.io/2014/12/27/1.控制器创建方式/</id>
    <published>2014-12-27T04:23:04.000Z</published>
    <updated>2016-10-23T01:56:06.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h3 id="控制器的三种创建方式-代码"><a href="#控制器的三种创建方式-代码" class="headerlink" title="控制器的三种创建方式-代码"></a>控制器的三种创建方式-代码</h3><ul>
<li>直接alloc init</li>
</ul>
<h3 id="控制器的三种创建方式-sb"><a href="#控制器的三种创建方式-sb" class="headerlink" title="控制器的三种创建方式-sb"></a>控制器的三种创建方式-sb</h3><ul>
<li>首先都要获取 sb 对象</li>
<li>两种方式:<ul>
<li>获取箭头所指向的控制器<ul>
<li>(不带参数的)</li>
</ul>
</li>
<li>获取指定sbID的控制器<ul>
<li>(带参数的)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="控制器的三种创建方式-xib"><a href="#控制器的三种创建方式-xib" class="headerlink" title="控制器的三种创建方式-xib"></a>控制器的三种创建方式-xib</h3><ul>
<li>三种:<ul>
<li>指定xib的名字 (创建控制器的时候的init的方法)</li>
<li>同名xib</li>
<li>同名去掉Controller的xib</li>
</ul>
</li>
<li>注意:<ul>
<li>xib的filesOwner为类名</li>
<li>view要记得连线     <a id="more"></a>
<h3 id="用-XIB-加载控制器的细节"><a href="#用-XIB-加载控制器的细节" class="headerlink" title="用 XIB 加载控制器的细节"></a>用 XIB 加载控制器的细节</h3></li>
</ul>
</li>
<li>优先级:<ul>
<li>如果指定的xib的名字,回去加载执行的xib</li>
<li>如果没有指定xib的名字<ul>
<li>如果有同名的xib,会去加载同名的xib</li>
<li>如果没有同名的xib<ul>
<li>如果有同名去掉Controller的xib,会去加载同名去掉Controller的xib</li>
<li>如果没有同名去掉Controller的xib,会创建一个空白的控制器        </li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<p>代码示例</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">AppDelegate.m</div><div class="line"></div><div class="line">	- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span>*)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span>*)launchOptions</div><div class="line">&#123;</div><div class="line">    <span class="comment">// Override point for customization after application launch.</span></div><div class="line">    <span class="keyword">self</span>.window = [[<span class="built_in">UIWindow</span> alloc] initWithFrame:[<span class="built_in">UIScreen</span> mainScreen].bounds];</div><div class="line"></div><div class="line"><span class="comment">// 1. 代码</span></div><div class="line">        TestViewController* vc = [[TestViewController alloc] init];</div><div class="line"></div><div class="line"><span class="comment">// 2.通过sb加载控制器</span></div><div class="line"></div><div class="line"><span class="number">2.1</span> 加载箭头所指向的控制器</div><div class="line">    <span class="comment">// 2.1.1 获取sb对象</span></div><div class="line">        <span class="built_in">UIStoryboard</span>* sb = [<span class="built_in">UIStoryboard</span> storyboardWithName:<span class="string">@"Test"</span> bundle:<span class="literal">nil</span>];</div><div class="line">    <span class="comment">// 2.1.2 加载箭头所指向的控制器</span></div><div class="line">        TestViewController* vc = sb.instantiateInitialViewController;</div><div class="line"><span class="number">2.2</span> 加载一个带sbID的控制器</div><div class="line">    <span class="comment">// 2.2.1 获取sb对象</span></div><div class="line">        <span class="built_in">UIStoryboard</span>* sb = [<span class="built_in">UIStoryboard</span> storyboardWithName:<span class="string">@"Test"</span> bundle:<span class="literal">nil</span>];</div><div class="line">    <span class="comment">// 2.2.2 加载一个带sbID的控制器</span></div><div class="line">        TestViewController* vc = [sb instantiateViewControllerWithIdentifier:<span class="string">@"test"</span>];</div><div class="line"></div><div class="line"><span class="comment">// 3.通过xib的形式加载控制器 (同名的xib优先级会比同名去掉Controller的要高!!!)</span></div><div class="line"></div><div class="line">  <span class="comment">// 3.1 指定xib名称</span></div><div class="line">    OneViewController* vc = [[OneViewController alloc] initWithNibName:<span class="string">@"Testtt"</span> bundle:<span class="literal">nil</span>];</div><div class="line">  <span class="comment">// 3.2 通过init的方法创建 (同名的xib)</span></div><div class="line">    <span class="comment">// 当调用init方法创建的时候 系统会尝试加载同名的xib</span></div><div class="line">        OneViewController* vc = [[OneViewController alloc] init];</div><div class="line"></div><div class="line"><span class="comment">// 3.3 通过init的方法创建 (同名去掉Controller的xib)</span></div><div class="line">    <span class="comment">// 当调用init方法创建的时候 系统会尝试加载同名去掉Controller的xib</span></div><div class="line">        OneViewController* vc = [[OneViewController alloc] init];</div><div class="line"></div><div class="line">    <span class="keyword">self</span>.window.rootViewController = vc;</div><div class="line"></div><div class="line">    [<span class="keyword">self</span>.window makeKeyAndVisible];</div><div class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;控制器的三种创建方式-代码&quot;&gt;&lt;a href=&quot;#控制器的三种创建方式-代码&quot; class=&quot;headerlink&quot; title=&quot;控制器的三种创建方式-代码&quot;&gt;&lt;/a&gt;控制器的三种创建方式-代码&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;直接alloc init&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;控制器的三种创建方式-sb&quot;&gt;&lt;a href=&quot;#控制器的三种创建方式-sb&quot; class=&quot;headerlink&quot; title=&quot;控制器的三种创建方式-sb&quot;&gt;&lt;/a&gt;控制器的三种创建方式-sb&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;首先都要获取 sb 对象&lt;/li&gt;
&lt;li&gt;两种方式:&lt;ul&gt;
&lt;li&gt;获取箭头所指向的控制器&lt;ul&gt;
&lt;li&gt;(不带参数的)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;获取指定sbID的控制器&lt;ul&gt;
&lt;li&gt;(带参数的)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;控制器的三种创建方式-xib&quot;&gt;&lt;a href=&quot;#控制器的三种创建方式-xib&quot; class=&quot;headerlink&quot; title=&quot;控制器的三种创建方式-xib&quot;&gt;&lt;/a&gt;控制器的三种创建方式-xib&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;三种:&lt;ul&gt;
&lt;li&gt;指定xib的名字 (创建控制器的时候的init的方法)&lt;/li&gt;
&lt;li&gt;同名xib&lt;/li&gt;
&lt;li&gt;同名去掉Controller的xib&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;注意:&lt;ul&gt;
&lt;li&gt;xib的filesOwner为类名&lt;/li&gt;
&lt;li&gt;view要记得连线
    
    </summary>
    
    
      <category term="控制器" scheme="http://whong7.github.io/tags/%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>图像绘制</title>
    <link href="http://whong7.github.io/2014/12/22/%E5%9B%BE%E5%83%8F%E7%BB%98%E5%88%B6/"/>
    <id>http://whong7.github.io/2014/12/22/图像绘制/</id>
    <published>2014-12-22T04:39:04.000Z</published>
    <updated>2016-10-23T01:55:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quartz2D-Core-Graphics介绍"><a href="#Quartz2D-Core-Graphics介绍" class="headerlink" title="Quartz2D/Core Graphics介绍"></a>Quartz2D/Core Graphics介绍</h2><ul>
<li>Quartz2D的API是哪个语言的?<ul>
<li>c语言 </li>
</ul>
</li>
<li>Quartz2D的API来自于哪个框架?<ul>
<li>Core Graphics</li>
</ul>
</li>
<li>Quartz2D可以做什么?<ul>
<li>饼状图,柱状图,折线图</li>
<li>自定义控件</li>
</ul>
</li>
<li>Quartz2D 支持 iOS 开发, mac 开发, 跨平台</li>
</ul>
<p><img src="http://ww3.sinaimg.cn/mw690/9632d3f5jw1f8wu4uorx2j20if0km75x.jpg" alt=""></p>
<a id="more"></a>
<h2 id="图形上下文介绍"><a href="#图形上下文介绍" class="headerlink" title="图形上下文介绍"></a>图形上下文介绍</h2><ul>
<li>图形上下文也叫做绘图上下文</li>
<li>图形上下文的类型?<ul>
<li>CGContextRef</li>
</ul>
</li>
<li>图形上下文包含的主要信息?<ul>
<li>路径(圆,方,线条)</li>
<li>状态(红色,多宽)</li>
<li>输出目标(在哪显示)</li>
</ul>
</li>
</ul>
<h2 id="绘图的步骤-方式-静态分析工具"><a href="#绘图的步骤-方式-静态分析工具" class="headerlink" title="绘图的步骤/方式/静态分析工具"></a>绘图的步骤/方式/静态分析工具</h2><ul>
<li>绘图的步骤有哪些?<ul>
<li>获取当前上下文</li>
<li>拼接路径 同时 把路径添加到上下文当中</li>
<li>渲染 </li>
</ul>
</li>
<li>静态分析工具的作用?<ul>
<li>不仅能够检测内存泄漏的问题,还能检测其他的问题. </li>
<li>这个工具仅仅是静态的在分析内存的问题,并不能真正的检测内存泄漏的问题.</li>
</ul>
</li>
<li>如何释放路径?<ul>
<li>CGPathRelease(path);</li>
<li>CFRelease(path);</li>
</ul>
</li>
<li>ARC仅仅是处理oc的引用计数的问题</li>
<li>在c中如果看到了create/copy/retain,一般都需要释放    </li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 步骤和方式</span></div><div class="line">- (<span class="keyword">void</span>)test1</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 绘图的步骤</span></div><div class="line"></div><div class="line"><span class="comment">// 方式1</span></div><div class="line"></div><div class="line">        <span class="comment">// 1.获取当前图形上下文</span></div><div class="line">        <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">        <span class="comment">// 2.拼接路径 同时 把路径添加到上下文当中</span></div><div class="line">        <span class="built_in">CGContextMoveToPoint</span>(ctx, <span class="number">100</span>, <span class="number">100</span>); <span class="comment">// 起点</span></div><div class="line">        <span class="built_in">CGContextAddLineToPoint</span>(ctx, <span class="number">200</span>, <span class="number">200</span>); <span class="comment">// 终点</span></div><div class="line"></div><div class="line">        <span class="comment">// 3.渲染(显示)</span></div><div class="line">        <span class="built_in">CGContextStrokePath</span>(ctx);</div><div class="line"></div><div class="line"><span class="comment">// 方式2</span></div><div class="line"></div><div class="line">    <span class="comment">// 1.获取当前图形上下文</span></div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">    <span class="comment">// 2.拼接路径</span></div><div class="line">    <span class="built_in">CGMutablePathRef</span> path = <span class="built_in">CGPathCreateMutable</span>();</div><div class="line">    <span class="built_in">CGPathMoveToPoint</span>(path, <span class="literal">NULL</span>, <span class="number">100</span>, <span class="number">100</span>);</div><div class="line">    <span class="built_in">CGPathAddLineToPoint</span>(path, <span class="literal">NULL</span>, <span class="number">200</span>, <span class="number">200</span>);</div><div class="line"></div><div class="line">    <span class="comment">// 3.把路径添加到上下文当中</span></div><div class="line">    <span class="built_in">CGContextAddPath</span>(ctx, path);</div><div class="line"></div><div class="line">    <span class="comment">// 4.渲染(显示)</span></div><div class="line">    <span class="built_in">CGContextStrokePath</span>(ctx);</div><div class="line"></div><div class="line">    <span class="comment">//    // 释放</span></div><div class="line">    <span class="built_in">CGPathRelease</span>(path);</div><div class="line">    <span class="comment">//    CFRelease(path);//可以释放所有Core foundation对象</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="绘图实例"><a href="#绘图实例" class="headerlink" title="绘图实例"></a>绘图实例</h2><ul>
<li>矩形<ul>
<li>addRect</li>
</ul>
</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 矩形</span></div><div class="line"></div><div class="line">    <span class="comment">// 获取上下文 uijjcc:</span></div><div class="line"></div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">    <span class="comment">// 拼接路径 同时 添加到上下文当中</span></div><div class="line">    <span class="built_in">CGContextAddRect</span>(ctx, <span class="built_in">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>));</div><div class="line"></div><div class="line">    <span class="comment">// 渲染</span></div><div class="line">    <span class="built_in">CGContextStrokePath</span>(ctx);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>椭圆<ul>
<li>addEllipse</li>
</ul>
</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 椭圆</span></div><div class="line"></div><div class="line">   <span class="comment">// 获取上下文</span></div><div class="line">   <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">   <span class="comment">// 路径</span></div><div class="line">   <span class="built_in">CGContextAddEllipseInRect</span>(ctx, <span class="built_in">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>));</div><div class="line"></div><div class="line">   <span class="comment">// 渲染</span></div><div class="line">   <span class="built_in">CGContextStrokePath</span>(ctx);</div></pre></td></tr></table></figure>
<ul>
<li>弧<ul>
<li>addArc</li>
</ul>
</li>
</ul>
<pre><code><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 弧</span></div><div class="line"></div><div class="line">   <span class="comment">// 上下文</span></div><div class="line">   <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line">   </div><div class="line">   <span class="comment">// 路径</span></div><div class="line">   <span class="comment">// x , y 圆心</span></div><div class="line">   <span class="comment">// radius 半径</span></div><div class="line">   <span class="comment">// start 起始的位置</span></div><div class="line">   <span class="comment">// end 结束的位置</span></div><div class="line">   <span class="comment">// clockwise 是否是顺时针</span></div><div class="line">   <span class="built_in">CGContextAddArc</span>(ctx, <span class="number">150</span>, <span class="number">150</span>, <span class="number">100</span>, <span class="number">0</span>, M_PI_2, <span class="number">1</span>);</div><div class="line">   <span class="comment">// 渲染</span></div><div class="line">   <span class="built_in">CGContextStrokePath</span>(ctx);</div></pre></td></tr></table></figure>
</code></pre><p><img src="http://ww1.sinaimg.cn/mw690/9632d3f5jw1f8wukfpij9j211y0qm41n.jpg" alt=""></p>
<h2 id="绘图的样式"><a href="#绘图的样式" class="headerlink" title="绘图的样式"></a>绘图的样式</h2><ul>
<li>线宽?<ul>
<li>CGContextSetLineWidth </li>
</ul>
</li>
<li>头尾样式?<ul>
<li>CGContextSetLineCap</li>
</ul>
</li>
<li>连接处样式?<ul>
<li>CGContextSetLineJoin </li>
</ul>
</li>
<li>虚线?<ul>
<li>CGContextSetLineDash </li>
</ul>
</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect</div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 画线</span></div><div class="line"></div><div class="line">    <span class="comment">// 上下文</span></div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">    <span class="comment">// 路径</span></div><div class="line">    <span class="built_in">CGContextMoveToPoint</span>(ctx, <span class="number">50</span>, <span class="number">100</span>);</div><div class="line">    <span class="built_in">CGContextAddLineToPoint</span>(ctx, <span class="number">250</span>, <span class="number">100</span>);</div><div class="line">    <span class="comment">//    CGContextAddLineToPoint(ctx, 200, 200);</span></div><div class="line"></div><div class="line"><span class="comment">// 设置线宽</span></div><div class="line">    <span class="built_in">CGContextSetLineWidth</span>(ctx, <span class="number">100</span>);<span class="comment">//对上下文所有的东西进行操作，渲染的时候起作用</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 设置头尾样式</span></div><div class="line">    <span class="built_in">CGContextSetLineCap</span>(ctx, kCGLineCapSquare);</div><div class="line">    <span class="comment">//    kCGLineCapButt, // 默认</span></div><div class="line">    <span class="comment">//    kCGLineCapRound, // 圆角</span></div><div class="line">    <span class="comment">//    kCGLineCapSquare // 方的,两头会加宽度的一半</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 设置连接处的样式</span></div><div class="line">    <span class="built_in">CGContextSetLineJoin</span>(ctx, kCGLineJoinBevel);</div><div class="line">    <span class="comment">//    kCGLineJoinMiter, // 默认</span></div><div class="line">    <span class="comment">//    kCGLineJoinRound, // 圆角</span></div><div class="line">    <span class="comment">//    kCGLineJoinBevel // 切角</span></div><div class="line"></div><div class="line"><span class="comment">// 虚线</span></div><div class="line">    <span class="comment">// phase 阶段 通常传0</span></div><div class="line">    <span class="comment">// lengths 数组</span></div><div class="line">    <span class="comment">// count 数组长度</span></div><div class="line"></div><div class="line">    <span class="comment">//     CGFloat lengths[] = &#123; 10, 20 &#125;;</span></div><div class="line">    <span class="comment">// 长度 10 间距20</span></div><div class="line"></div><div class="line">    <span class="comment">//   CGFloat lengths[] = &#123; 10, 20, 30 &#125;;</span></div><div class="line">    <span class="comment">// 长度 10  间距 20  长度 30  间距10  长度 20  间距30   长度 10  间距 20</span></div><div class="line"></div><div class="line">    <span class="built_in">CGFloat</span> lengths[] = &#123; <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span> &#125;;</div><div class="line">    <span class="built_in">CGContextSetLineDash</span>(ctx, <span class="number">30</span>, lengths, <span class="number">3</span>);</div><div class="line"></div><div class="line">    <span class="comment">// 渲染</span></div><div class="line">    <span class="built_in">CGContextStrokePath</span>(ctx);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="渲染的方式-绘图的颜色"><a href="#渲染的方式-绘图的颜色" class="headerlink" title="渲染的方式/绘图的颜色"></a>渲染的方式/绘图的颜色</h2><ul>
<li>关闭路径?<ul>
<li>CGContextClosePath(ctx); // 从当前的位置 连线 到初始的位置 </li>
</ul>
</li>
<li>描边?<ul>
<li>stork</li>
</ul>
</li>
<li>填充?<ul>
<li>fill</li>
</ul>
</li>
<li>color对象的 set/setFill/setStrok 区别?<ul>
<li>setFill 仅仅是设置填充的颜色</li>
<li>setStrok 仅仅是设置描边的颜色</li>
<li>set 两个都设置</li>
</ul>
</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 渲染的方法</span></div><div class="line">- (<span class="keyword">void</span>)test6</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 三角形</span></div><div class="line"></div><div class="line">    <span class="comment">// 上下文</span></div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">    <span class="comment">// 路径</span></div><div class="line">    <span class="built_in">CGContextMoveToPoint</span>(ctx, <span class="number">100</span>, <span class="number">100</span>);</div><div class="line">    <span class="built_in">CGContextAddLineToPoint</span>(ctx, <span class="number">200</span>, <span class="number">100</span>);</div><div class="line">    <span class="built_in">CGContextAddLineToPoint</span>(ctx, <span class="number">150</span>, <span class="number">200</span>);</div><div class="line">    <span class="built_in">CGContextClosePath</span>(ctx); <span class="comment">// 从当前的位置 连线 到初始的位置</span></div><div class="line"></div><div class="line">    <span class="comment">// 设置颜色oc</span></div><div class="line">    [[<span class="built_in">UIColor</span> redColor] setFill];<span class="comment">//填充颜色</span></div><div class="line"></div><div class="line">    [[<span class="built_in">UIColor</span> whiteColor] set];<span class="comment">//线的颜色</span></div><div class="line"></div><div class="line">    [[<span class="built_in">UIColor</span> blueColor] setStroke];<span class="comment">//对两者都进行设定</span></div><div class="line">    <span class="comment">// 渲染</span></div><div class="line">    <span class="built_in">CGContextDrawPath</span>(ctx, kCGPathFillStroke);<span class="comment">//对  填充和描边  进行渲染</span></div><div class="line">    <span class="comment">//    CGContextFillPath(ctx);</span></div><div class="line"></div><div class="line">    <span class="comment">// CGContextDrawPath(ctx, kCGPathStroke); &lt;==&gt; CGContextStrokePath(ctx);</span></div><div class="line">    <span class="comment">// CGContextDrawPath(ctx, kCGPathFill); &lt;==&gt; CGContextFillPath(ctx);</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="补充-不同样式的线"><a href="#补充-不同样式的线" class="headerlink" title="补充-不同样式的线"></a>补充-不同样式的线</h2><ul>
<li>如果想要出现不同样式的线<ul>
<li>需要渲染多次</li>
</ul>
</li>
<li>渲染的过程,仅仅是把路径信息,渲染上去.这个时候,当前上下文还在,路径信息,如果被渲染以后,就没有了.但是,状态信息和目标信息都还在    </li>
</ul>
<p><strong>两条线  一条粗，一条细</strong></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 不同样式的线</span></div><div class="line">- (<span class="keyword">void</span>)test7</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 上下文</span></div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">    <span class="built_in">CGContextSetLineWidth</span>(ctx, <span class="number">25</span>);</div><div class="line">    <span class="comment">// 路径</span></div><div class="line">    <span class="built_in">CGContextMoveToPoint</span>(ctx, <span class="number">100</span>, <span class="number">100</span>);</div><div class="line">    <span class="built_in">CGContextAddLineToPoint</span>(ctx, <span class="number">100</span>, <span class="number">200</span>);</div><div class="line"></div><div class="line">  <span class="comment">// 渲染：渲染的过程，是把当前所有的东西全都剪切到UIView。</span></div><div class="line">    <span class="built_in">CGContextStrokePath</span>(ctx);</div><div class="line"></div><div class="line">        <span class="comment">//从新设定上下文</span></div><div class="line">    <span class="built_in">CGContextSetLineWidth</span>(ctx, <span class="number">20</span>);</div><div class="line"></div><div class="line">    <span class="built_in">CGContextMoveToPoint</span>(ctx, <span class="number">200</span>, <span class="number">100</span>);</div><div class="line">    <span class="built_in">CGContextAddLineToPoint</span>(ctx, <span class="number">200</span>, <span class="number">200</span>);</div><div class="line"></div><div class="line">    <span class="built_in">CGContextStrokePath</span>(ctx);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="奇偶填充规则"><a href="#奇偶填充规则" class="headerlink" title="奇偶填充规则"></a>奇偶填充规则</h2><ul>
<li>even odd</li>
<li>不是默认的填充规则,如果需要使用需要调用 EOFill</li>
<li>奇填偶不填</li>
</ul>
<p><strong>参考代码:</strong></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 奇偶填充规则</span></div><div class="line">-(<span class="keyword">void</span>)test8</div><div class="line">&#123;</div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">    <span class="built_in">CGContextAddArc</span>(ctx, <span class="number">150</span>, <span class="number">150</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">2</span> * M_PI, <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="built_in">CGContextAddRect</span>(ctx, <span class="built_in">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>));</div><div class="line"></div><div class="line">    <span class="built_in">CGContextAddRect</span>(ctx, <span class="built_in">CGRectMake</span>(<span class="number">120</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">250</span>));</div><div class="line"></div><div class="line">    <span class="built_in">CGContextDrawPath</span>(ctx, kCGPathEOFill);<span class="comment">//eo：奇偶--奇填偶不填，如果只是kCGPathFill：就是一坨黑</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="非零环绕数规则"><a href="#非零环绕数规则" class="headerlink" title="非零环绕数规则"></a>非零环绕数规则</h2><ul>
<li>如果是从右往左 +1</li>
<li>如果是从左往右 -1</li>
<li>如果最终结果不为0 那么填充</li>
<li>非零环绕数是默认的填充规则</li>
</ul>
<p><strong>参考代码:</strong></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect</div><div class="line">&#123;</div><div class="line">    <span class="comment">// Drawing code</span></div><div class="line"></div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line"></div><div class="line">    <span class="built_in">CGMutablePathRef</span> path1 = <span class="built_in">CGPathCreateMutable</span>();</div><div class="line">    <span class="built_in">CGMutablePathRef</span> path2 = <span class="built_in">CGPathCreateMutable</span>();</div><div class="line"></div><div class="line">    <span class="built_in">CGPathAddArc</span>(path1, <span class="literal">NULL</span>, <span class="number">150</span>, <span class="number">150</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">2</span> * M_PI, <span class="number">1</span>);</div><div class="line">    <span class="built_in">CGPathAddArc</span>(path2, <span class="literal">NULL</span>, <span class="number">150</span>, <span class="number">150</span>, <span class="number">80</span>, <span class="number">0</span>, <span class="number">2</span> * M_PI, <span class="number">0</span>);</div><div class="line">    <span class="comment">//</span></div><div class="line">    <span class="built_in">CGContextAddPath</span>(ctx, path1);</div><div class="line">    <span class="built_in">CGContextAddPath</span>(ctx, path2);</div><div class="line"></div><div class="line">    <span class="built_in">CGContextFillPath</span>(ctx);</div><div class="line"></div><div class="line">    <span class="built_in">CGPathRelease</span>(path1);</div><div class="line">    <span class="built_in">CGPathRelease</span>(path2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="关于drawRect"><a href="#关于drawRect" class="headerlink" title="关于drawRect"></a>关于drawRect</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">//- 为什么要把代码写在drawRect当中?</div><div class="line">// 因为这个方法可以获取到正确的上下文</div><div class="line"></div><div class="line">//- drawrect方法中rect参数的含义是什么?</div><div class="line">// 当前view的bounds</div><div class="line"></div><div class="line">//- drawrect什么时候调用?</div><div class="line">// 这个方法是系统自动调用,不要手动调用</div><div class="line">// 1.当这个view第一次显示的时候会调用</div><div class="line">// 2.当重绘的时候会调用</div><div class="line"></div><div class="line">//- 如何重绘?</div><div class="line">// 1.调用需要重绘的对象的 setNeedsDisplay</div><div class="line">// 2.调用需要重绘的对象的 setNeedsDisplayInRect</div></pre></td></tr></table></figure>
<h2 id="UIKit绘制图形-lt-oc-gt"><a href="#UIKit绘制图形-lt-oc-gt" class="headerlink" title="UIKit绘制图形 &lt;oc&gt;"></a>UIKit绘制图形 <code>&lt;oc&gt;</code></h2><p><strong>画一条线</strong></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect</div><div class="line">&#123;</div><div class="line">    <span class="comment">//Crawing code</span></div><div class="line"></div><div class="line"><span class="comment">//1.path对象</span></div><div class="line">    <span class="built_in">UIBezierPath</span> *path = [[<span class="built_in">UIBezierPath</span> alloc]init];</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//2.路径</span></div><div class="line">    <span class="comment">//线</span></div><div class="line">    [path moveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">100</span>, <span class="number">100</span>)];</div><div class="line">    [path addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">200</span>, <span class="number">200</span>)];</div><div class="line"></div><div class="line"><span class="comment">//3.渲染</span></div><div class="line">    [path stroke];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>矩形<ul>
<li>bezierPathWithRect </li>
</ul>
</li>
<li>椭圆<ul>
<li>bezierPathWithOvalInRect     </li>
</ul>
</li>
<li>圆角矩形<ul>
<li>bezierPathWithRoundedRect</li>
<li>圆角矩形 超过了半径的三分之二 会变成一个圆</li>
</ul>
</li>
<li>圆<ul>
<li>bezierPathWithArcCenter </li>
</ul>
</li>
<li>c 和 oc 的区别?<ul>
<li>Quartz2d是C的api</li>
<li>c的功能比oc的强大</li>
<li>oc仅仅是封装了一部分c的api</li>
<li>从代码量上来说 oc比c 简单</li>
<li>一般情况,工作中用oc.如果oc实现不了的功能用c</li>
</ul>
</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect</div><div class="line">&#123;</div><div class="line">    <span class="comment">//Crawing code</span></div><div class="line"></div><div class="line"><span class="comment">//1.矩形</span></div><div class="line"></div><div class="line">    <span class="built_in">UIBezierPath</span> *path = [<span class="built_in">UIBezierPath</span> bezierPathWithRect:<span class="built_in">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>)];</div><div class="line">    [path stroke];</div><div class="line"></div><div class="line"><span class="comment">//2.椭圆</span></div><div class="line"></div><div class="line">    <span class="built_in">UIBezierPath</span> *path1 = [<span class="built_in">UIBezierPath</span> bezierPathWithOvalInRect:<span class="built_in">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>)];</div><div class="line">    [path1 stroke];</div><div class="line"></div><div class="line"><span class="comment">//3.圆角矩形</span></div><div class="line">    <span class="built_in">UIBezierPath</span> *path2 = [<span class="built_in">UIBezierPath</span> bezierPathWithRoundedRect:<span class="built_in">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>) cornerRadius:<span class="number">30</span>];<span class="comment">//50正好，超过了半径的2/3的话 会变成一个圆</span></div><div class="line">    [path2 stroke];</div><div class="line"></div><div class="line"><span class="comment">//4.弧</span></div><div class="line">    <span class="built_in">UIBezierPath</span> *path3 = [<span class="built_in">UIBezierPath</span> bezierPathWithArcCenter:<span class="built_in">CGPointMake</span>(<span class="number">150</span>, <span class="number">150</span>) radius:<span class="number">100</span> startAngle:<span class="number">0</span> endAngle:M_PI_2 clockwise:<span class="number">1</span>];</div><div class="line">    [path3 stroke];</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="oc和c混用"><a href="#oc和c混用" class="headerlink" title="oc和c混用"></a>oc和c混用</h2><ul>
<li>c和oc可以混用</li>
<li>c如何转成oc的path<ul>
<li>通过类方法 传入 CGPath</li>
</ul>
</li>
<li>oc如何转成c的path<ul>
<li>直接通过ocPath的.CGPath即可 </li>
</ul>
</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect</div><div class="line">&#123;</div><div class="line">   <span class="comment">//1.c方法</span></div><div class="line"></div><div class="line">    <span class="comment">//上下文</span></div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line">    <span class="comment">//路径</span></div><div class="line">    <span class="built_in">CGMutablePathRef</span> path = <span class="built_in">CGPathCreateMutable</span>();</div><div class="line"></div><div class="line">    <span class="built_in">CGPathMoveToPoint</span>(path, <span class="literal">NULL</span>, <span class="number">100</span>, <span class="number">100</span>);</div><div class="line">    <span class="built_in">CGPathAddLineToPoint</span>(path, <span class="literal">NULL</span>, <span class="number">200</span>, <span class="number">200</span>);</div><div class="line"></div><div class="line">    <span class="comment">//oc路径</span></div><div class="line">    <span class="built_in">UIBezierPath</span> *ocPath = [<span class="built_in">UIBezierPath</span> bezierPathWithCGPath:path];</div><div class="line"></div><div class="line">    [ocPath addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">200</span>, <span class="number">100</span>)];</div><div class="line"></div><div class="line"><span class="comment">//    [ocPath stroke];//oc显示</span></div><div class="line"></div><div class="line"><span class="comment">//   将oc转化成c的path并添加到上下文</span></div><div class="line">     <span class="comment">//CGContextAddPath(ctx, path);</span></div><div class="line">    <span class="built_in">CGContextAddPath</span>(ctx, ocPath.CGPath);</div><div class="line">    <span class="built_in">CGContextStrokePath</span>(ctx);</div><div class="line"></div><div class="line">    <span class="comment">//释放c的路径</span></div><div class="line">    <span class="built_in">CGPathRelease</span>(path);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="UIKit绘制字符串"><a href="#UIKit绘制字符串" class="headerlink" title="UIKit绘制字符串"></a>UIKit绘制字符串</h2><ul>
<li>drawInRect?<ul>
<li>drawInRect 绘制到指定的区域</li>
</ul>
</li>
<li>drawAtPoint?<ul>
<li>// drawAtPoint 从某个点开始画</li>
</ul>
</li>
<li>NSShadow</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect</div><div class="line">&#123;</div><div class="line">  <span class="comment">//绘制字符串</span></div><div class="line">    <span class="built_in">NSString</span> *str = <span class="string">@"我是whong7"</span>;</div><div class="line"></div><div class="line">    <span class="comment">//创建影子</span></div><div class="line">    <span class="built_in">NSShadow</span> *s = [[<span class="built_in">NSShadow</span> alloc]init];</div><div class="line"></div><div class="line">    s.shadowOffset = <span class="built_in">CGSizeMake</span>(<span class="number">100</span>, <span class="number">100</span>);<span class="comment">//创建影子位置</span></div><div class="line">    s.shadowBlurRadius = <span class="number">0</span>;<span class="comment">//影子模糊程度，越大越模糊</span></div><div class="line">    s.shadowColor = [<span class="built_in">UIColor</span> yellowColor];<span class="comment">//影子的颜色</span></div><div class="line"></div><div class="line">    <span class="built_in">NSDictionary</span> *attr =</div><div class="line">  @&#123;</div><div class="line">    <span class="built_in">NSFontAttributeName</span> : [<span class="built_in">UIFont</span> systemFontOfSize:<span class="number">20</span>],<span class="comment">//字体大小</span></div><div class="line"><span class="comment">//    NSBackgroundColorAttributeName:[UIColor blueColor],//背景颜色,有背景就不显示影子字了</span></div><div class="line">    <span class="built_in">NSForegroundColorAttributeName</span>:[<span class="built_in">UIColor</span> redColor],<span class="comment">//字体颜色</span></div><div class="line">    <span class="built_in">NSUnderlineStyleAttributeName</span>:@<span class="number">1</span>,</div><div class="line">    <span class="built_in">NSShadowAttributeName</span>:s</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="comment">//drawAtPoint 从某个点开始，不会自动换行</span></div><div class="line"><span class="comment">//    [str drawAtPoint:CGPointMake(0, 0) withAttributes:attr];</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">//drawAtRect 区域内书写，会自动换行</span></div><div class="line">    [str drawInRect:<span class="built_in">CGRectMake</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">100</span>) withAttributes:attr];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="UIKit绘制图像"><a href="#UIKit绘制图像" class="headerlink" title="UIKit绘制图像"></a>UIKit绘制图像</h2><ul>
<li>drawInRect?<ul>
<li>拉伸到指定的区域, 小图会变大 大图会变小 </li>
</ul>
</li>
<li>drawAtPoint?<ul>
<li>从某一个点开始绘制 不变形 </li>
</ul>
</li>
<li>drawAsPatternInRect?<ul>
<li>平铺到某个区域 不变形 </li>
</ul>
</li>
<li>可以做水印相关的东西    </li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"DemoView.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">DemoView</span></span></div><div class="line"></div><div class="line">-(<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect</div><div class="line">&#123;</div><div class="line"><span class="comment">//绘制图片</span></div><div class="line">    <span class="built_in">UIImage</span> *image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@"me"</span>];</div><div class="line"></div><div class="line"><span class="comment">//从某一个点开始绘制</span></div><div class="line">    [image drawAtPoint:<span class="built_in">CGPointMake</span>(<span class="number">100</span>, <span class="number">100</span>)];</div><div class="line"></div><div class="line"><span class="comment">//拉伸</span></div><div class="line">    [image drawInRect:rect];</div><div class="line"></div><div class="line"><span class="comment">//平铺</span></div><div class="line">    [image drawAsPatternInRect:rect];</div><div class="line"></div><div class="line"><span class="comment">//加水印</span></div><div class="line">    <span class="built_in">NSString</span> *str = <span class="string">@"水印"</span>;</div><div class="line">    [str drawAtPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, <span class="number">0</span>) withAttributes:@&#123; <span class="built_in">NSForegroundColorAttributeName</span>:[<span class="built_in">UIColor</span> whiteColor] &#125;];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="图像保存"><a href="#图像保存" class="headerlink" title="图像保存"></a>图像保存</h2><ul>
<li>UIImageWriteToSavedPhotosAlbum</li>
<li>参数分别为 保存的图片/回调target/回调方法/标记</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">IBAction</span>)save:(<span class="keyword">id</span>)sender &#123;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">//开启创建上下文 图片类型 的 图形上下文</span></div><div class="line">    <span class="built_in">UIGraphicsBeginImageContext</span>(<span class="keyword">self</span>.DrawView.bounds.size);</div><div class="line"></div><div class="line">    <span class="comment">//获取上下文，不用获取就可以画</span></div><div class="line"><span class="comment">//    CGContextRef ctx = UIGraphicsGetCurrentContext();</span></div><div class="line"></div><div class="line">    <span class="comment">//把这个view 画到当前的上下文当中 并进行渲染</span></div><div class="line">    [<span class="keyword">self</span>.DrawView drawViewHierarchyInRect:<span class="keyword">self</span>.DrawView.bounds afterScreenUpdates:<span class="literal">YES</span>];</div><div class="line"></div><div class="line">    <span class="comment">//获取图片</span></div><div class="line">    <span class="built_in">UIImage</span> *image = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</div><div class="line"></div><div class="line">    <span class="comment">//关闭</span></div><div class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</div><div class="line"></div><div class="line">    <span class="comment">// 保存相册 - 完成的是有一定要使用系统的方法</span></div><div class="line">    <span class="built_in">UIImageWriteToSavedPhotosAlbum</span>(image, <span class="keyword">self</span>, <span class="keyword">@selector</span>(image:didFinishSavingWithError:contextInfo:), <span class="string">@"123123123"</span>);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)image:(<span class="built_in">UIImage</span>*)image didFinishSavingWithError:(<span class="built_in">NSError</span>*)error contextInfo:(<span class="keyword">void</span>*)contextInfo</div><div class="line">&#123;</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"保存成功"</span>);</div><div class="line"></div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, contextInfo);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="整体思维导图"><a href="#整体思维导图" class="headerlink" title="整体思维导图"></a>整体思维导图</h2><p><img src="http://ww3.sinaimg.cn/large/9632d3f5jw1f8xdug15y0j21kw1yaaxd.jpg" alt=""></p>
<p>高清思维导图下载地址<br><a href="https://raw.githubusercontent.com/whong7/whong7.github.io/master/MindNotePictures/绘图.png" target="_blank" rel="external">绘图.png</a></p>
<p>MindNode源文件下载地址<br><a href="https://raw.githubusercontent.com/whong7/whong7.github.io/master/MindNote/绘图.zip" target="_blank" rel="external">绘图.mindnode</a></p>
<h2 id="反馈与建议"><a href="#反馈与建议" class="headerlink" title="反馈与建议"></a>反馈与建议</h2><ul>
<li>微博：<a href="http://weibo.com/u/2519913461" target="_blank" rel="external">@whong77</a></li>
<li>邮箱：<a href="&#109;&#97;&#x69;&#108;&#x74;&#111;&#58;&#119;&#104;&#x6f;&#x6e;&#x67;&#55;&#x39;&#49;&#x31;&#x32;&#x30;&#x37;&#x40;&#49;&#x36;&#51;&#46;&#99;&#x6f;&#109;">&#119;&#104;&#x6f;&#x6e;&#x67;&#55;&#x39;&#49;&#x31;&#x32;&#x30;&#x37;&#x40;&#49;&#x36;&#51;&#46;&#99;&#x6f;&#109;</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Quartz2D-Core-Graphics介绍&quot;&gt;&lt;a href=&quot;#Quartz2D-Core-Graphics介绍&quot; class=&quot;headerlink&quot; title=&quot;Quartz2D/Core Graphics介绍&quot;&gt;&lt;/a&gt;Quartz2D/Core Graphics介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Quartz2D的API是哪个语言的?&lt;ul&gt;
&lt;li&gt;c语言 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Quartz2D的API来自于哪个框架?&lt;ul&gt;
&lt;li&gt;Core Graphics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Quartz2D可以做什么?&lt;ul&gt;
&lt;li&gt;饼状图,柱状图,折线图&lt;/li&gt;
&lt;li&gt;自定义控件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Quartz2D 支持 iOS 开发, mac 开发, 跨平台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/mw690/9632d3f5jw1f8wu4uorx2j20if0km75x.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="绘图" scheme="http://whong7.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>内存警告方法</title>
    <link href="http://whong7.github.io/2014/04/22/3.%E5%86%85%E5%AD%98%E8%AD%A6%E5%91%8A%E6%96%B9%E6%B3%95/"/>
    <id>http://whong7.github.io/2014/04/22/3.内存警告方法/</id>
    <published>2014-04-22T06:22:34.000Z</published>
    <updated>2016-10-21T11:58:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内存警告方法"><a href="#内存警告方法" class="headerlink" title="内存警告方法"></a>内存警告方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">- (void)didReceiveMemoryWarning</div><div class="line">&#123;</div><div class="line">    [super didReceiveMemoryWarning];</div><div class="line"></div><div class="line">    // Called when the parent application receives a memory warning.</div><div class="line">    // 这个方法在应用程序接受到内存警告的时候调用</div><div class="line">    // On iOS 6.0 it will no longer clear the view by default.</div><div class="line">    // 在6.0只有 不再默认清理 self.view</div><div class="line"></div><div class="line">    // 当这个view是否正在显示</div><div class="line">    // 这个view是否已经被加载</div><div class="line"></div><div class="line">    if (self.isViewLoaded &amp;&amp; self.view.window == nil) &#123;</div><div class="line">        [self setView:nil];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 处理当前控制器强引用的属性</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;内存警告方法&quot;&gt;&lt;a href=&quot;#内存警告方法&quot; class=&quot;headerlink&quot; title=&quot;内存警告方法&quot;&gt;&lt;/a&gt;内存警告方法&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
    
      <category term="内存" scheme="http://whong7.github.io/tags/%E5%86%85%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>控制器与视图的生命周期</title>
    <link href="http://whong7.github.io/2014/04/19/2.%E6%8E%A7%E5%88%B6%E5%99%A8%E4%B8%8E%E8%A7%86%E5%9B%BE%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://whong7.github.io/2014/04/19/2.控制器与视图的生命周期/</id>
    <published>2014-04-19T08:31:02.000Z</published>
    <updated>2016-10-23T01:56:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="控制器在导航控制器的生命周期"><a href="#控制器在导航控制器的生命周期" class="headerlink" title="控制器在导航控制器的生命周期"></a>控制器在导航控制器的生命周期</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">// 控制器在nav中 push的时候 的过程</div><div class="line">// one 将要消失</div><div class="line">// two view加载完成</div><div class="line">// two 将要显示</div><div class="line">// one 已经消失</div><div class="line">// two 已经显示</div><div class="line"></div><div class="line">// 控制器在nav中 拖拽返回的时候</div><div class="line">// 拖拽的时候  two 将要消失 one 将要显示</div><div class="line">// 松手返回到上一个页面 two 已经消失 one 已经显示</div><div class="line"></div><div class="line">// 控制器在nav中 拖拽返回的时候</div><div class="line">// 拖拽的时候  two 将要消失 one 将要显示</div><div class="line">// 松手没有返回上一个页面  one 将要消失 one 已经消失 two 将要显示 two 已经显示</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="控制器在标签控制器的生命周期"><a href="#控制器在标签控制器的生命周期" class="headerlink" title="控制器在标签控制器的生命周期"></a>控制器在标签控制器的生命周期</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// 控制器在tabbarController中的声明周期</div><div class="line">// two view加载完成</div><div class="line">// two view将要显示</div><div class="line">// one view将要消失</div><div class="line">// one view已经消失</div><div class="line">// two view已经显示</div></pre></td></tr></table></figure>
<h2 id="控制器在nav的生命周期"><a href="#控制器在nav的生命周期" class="headerlink" title="控制器在nav的生命周期"></a>控制器在nav的生命周期</h2><hr>
<p><strong>控制器在nav中push的时候的过程</strong><br>// one 将要消失<br>// two view加载完成<br>// two 将要显示<br>// one 已经消失<br>// two 已经显示</p>
<p><strong>控制器在nav中 拖拽返回的时候</strong><br>// 拖拽的时候  two 将要消失 one 将要显示<br>// 松手返回到上一个页面 two 已经消失 one 已经显示</p>
<p><strong>控制器在nav中 拖拽返回的时候</strong><br>// 拖拽的时候  two 将要消失 one 将要显示<br>// 松手没有返回上一个页面  one 将要消失 one 已经消失 two 将要显示 two 已经显示</p>
<hr>
<h2 id="视图的生命周期方法"><a href="#视图的生命周期方法" class="headerlink" title="视图的生命周期方法"></a>视图的生命周期方法</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"DemoView.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">DemoView</span></span></div><div class="line"></div><div class="line"><span class="comment">// 将要移动到superView 通过'addSubView'</span></div><div class="line">- (<span class="keyword">void</span>)willMoveToSuperview:(<span class="keyword">nullable</span> <span class="built_in">UIView</span>*)newSuperview</div><div class="line">&#123;</div><div class="line">    [<span class="keyword">super</span> willMoveToSuperview:newSuperview];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@ -- %s"</span>, <span class="keyword">self</span>.class, __FUNCTION__);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 已经移动到superView</span></div><div class="line">- (<span class="keyword">void</span>)didMoveToSuperview</div><div class="line">&#123;</div><div class="line">    [<span class="keyword">super</span> didMoveToSuperview];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@ -- %s"</span>, <span class="keyword">self</span>.class, __FUNCTION__);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 将要移动到window '显示/消失'</span></div><div class="line">- (<span class="keyword">void</span>)willMoveToWindow:(<span class="keyword">nullable</span> <span class="built_in">UIWindow</span>*)newWindow</div><div class="line">&#123;</div><div class="line"></div><div class="line">    [<span class="keyword">super</span> willMoveToWindow:newWindow];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@ -- %s"</span>, <span class="keyword">self</span>.class, __FUNCTION__);</div><div class="line"></div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"willMoveToWindow ------- &gt; %@"</span>, newWindow);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 已经移动到window '显示/消失'</span></div><div class="line">- (<span class="keyword">void</span>)didMoveToWindow</div><div class="line">&#123;</div><div class="line">    [<span class="keyword">super</span> didMoveToWindow];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@ -- %s"</span>, <span class="keyword">self</span>.class, __FUNCTION__);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<p><strong>输出结果：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">2016-07-09 13:17:27.255 05-控制器生命周期[31547:3527271] OneViewController -- -[ViewController viewDidLoad]</div><div class="line">2016-07-09 13:17:27.256 05-控制器生命周期[31547:3527271] DemoView -- -[DemoView willMoveToSuperview:]</div><div class="line">2016-07-09 13:17:27.256 05-控制器生命周期[31547:3527271] DemoView -- -[DemoView didMoveToSuperview]</div><div class="line">2016-07-09 13:17:27.258 05-控制器生命周期[31547:3527271] OneViewController -- -[ViewController viewWillAppear:]</div><div class="line">2016-07-09 13:17:27.258 05-控制器生命周期[31547:3527271] DemoView -- -[DemoView willMoveToWindow:]</div><div class="line">2016-07-09 13:17:27.258 05-控制器生命周期[31547:3527271] willMoveToWindow ------- &gt; &lt;UIWindow: 0x7f8d88cbd2d0; frame = (0 0; 375 667); gestureRecognizers = &lt;NSArray: 0x7f8d88cbe4d0&gt;; layer = &lt;UIWindowLayer: 0x7f8d88cb1fc0&gt;&gt;</div><div class="line">2016-07-09 13:17:27.259 05-控制器生命周期[31547:3527271] DemoView -- -[DemoView didMoveToWindow]</div><div class="line">2016-07-09 13:17:27.266 05-控制器生命周期[31547:3527271] OneViewController -- -[ViewController viewDidAppear:]</div></pre></td></tr></table></figure>
<ul>
<li>如何判断一个view是否显示在屏幕上,如果这个view的.window属性,有值,证明他已经显示在当前的屏幕上,如果没有值的话,表示当前没有显示在屏幕上</li>
<li>addSubView 会触发’willMoveToSuperview’’didMoveToSuperview’的方法</li>
<li>这四个方法显示和消失的时候都会调用,只不过是移动到不同的view和不同window</li>
</ul>
<h2 id="整体思维导图"><a href="#整体思维导图" class="headerlink" title="整体思维导图"></a>整体思维导图</h2><p><img src="http://ww2.sinaimg.cn/large/9632d3f5jw1f905677xa0j21kw1qnh36.jpg" alt=""></p>
<p>高清思维导图下载地址<br><a href="https://raw.githubusercontent.com/whong7/whong7.github.io/master/MindNotePictures/生命周期.png" target="_blank" rel="external">绘图.png</a></p>
<p>MindNode源文件下载地址<br><a href="https://raw.githubusercontent.com/whong7/whong7.github.io/master/MindNote/%20生命周期.zip" target="_blank" rel="external">绘图.mindnode</a></p>
<h2 id="反馈与建议"><a href="#反馈与建议" class="headerlink" title="反馈与建议"></a>反馈与建议</h2><ul>
<li>微博：<a href="http://weibo.com/u/2519913461" target="_blank" rel="external">@whong77</a></li>
<li>邮箱：<a href="&#109;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x77;&#x68;&#111;&#110;&#103;&#x37;&#x39;&#x31;&#x31;&#50;&#48;&#x37;&#x40;&#x31;&#54;&#x33;&#x2e;&#99;&#111;&#x6d;">&#x77;&#x68;&#111;&#110;&#103;&#x37;&#x39;&#x31;&#x31;&#50;&#48;&#x37;&#x40;&#x31;&#54;&#x33;&#x2e;&#99;&#111;&#x6d;</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;控制器在导航控制器的生命周期&quot;&gt;&lt;a href=&quot;#控制器在导航控制器的生命周期&quot; class=&quot;headerlink&quot; title=&quot;控制器在导航控制器的生命周期&quot;&gt;&lt;/a&gt;控制器在导航控制器的生命周期&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// 控制器在nav中 push的时候 的过程&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// one 将要消失&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// two view加载完成&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// two 将要显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// one 已经消失&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// two 已经显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 控制器在nav中 拖拽返回的时候&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 拖拽的时候  two 将要消失 one 将要显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 松手返回到上一个页面 two 已经消失 one 已经显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 控制器在nav中 拖拽返回的时候&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 拖拽的时候  two 将要消失 one 将要显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 松手没有返回上一个页面  one 将要消失 one 已经消失 two 将要显示 two 已经显示&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="生命周期" scheme="http://whong7.github.io/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
  </entry>
  
</feed>
